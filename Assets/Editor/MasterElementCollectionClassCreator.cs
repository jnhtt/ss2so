using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public static class MasterElementCollectionClassCreator
{
    public static readonly string MASTER_GENERATED_PATH = Application.dataPath + "/Master/Generated";

    public static bool Create(string masterName, string jsonString)
    {
        try {
            var masterJsonData = LitJson.JsonMapper.ToObject<LitJson.JsonData>(jsonString);
            CreateMasterElementCollectionClassScript(masterName, masterJsonData);

        } catch (System.Exception e) {
            Debug.LogError(e.ToString());
            return false;
        }
        return true;
    }

    private static void CreateMasterElementCollectionClassScript(string masterName, LitJson.JsonData masterJsonData)
    {
        string classContent =
            @"// GENERATED BY SCRIPT! DO NOT EDIT!
using System;

namespace Master
{
    [Serializable]
    public partial class $0Collection : MasterElementCollection<$1, $2>
    {
        $3
    }
}
            ";

        classContent = classContent.Replace("$0", masterName);
        classContent = classContent.Replace("$1", GetClassPrimaryKeyType(masterJsonData));
        classContent = classContent.Replace("$2", masterName);
        classContent = classContent.Replace("$3", GetLoadFromJsonFunction(masterName, masterJsonData));

        string path = string.Format("{0}/{1}Collection.cs", MASTER_GENERATED_PATH, masterName);
        System.IO.File.WriteAllText(path, classContent);
    }

    private static string GetClassPrimaryKeyType(LitJson.JsonData masterJsonData)
    {
        var primary = masterJsonData["masterHeader"][0];
        return primary.ToString();
    }

    private static string GetLoadFromJsonFunction(string className, LitJson.JsonData masterJsonData)
    {
        string loadFromJsonFunction = @"
        public static $0Collection LoadFromJson(string jsonString)
        {
            var instance = CreateInstance<$0Collection>();
            return LoadFromJson<$0Collection>(instance, jsonString);
        }
        ";

        loadFromJsonFunction = loadFromJsonFunction.Replace("$0", className);
        return loadFromJsonFunction;
    }
}
